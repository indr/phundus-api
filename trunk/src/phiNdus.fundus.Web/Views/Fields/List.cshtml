@model FieldsViewModel

@{
    ViewBag.Title = "Materialeigenschaften";
}

@section Breadcrumbs {
     @Html.ActionLink("Artikel", "Index", "Article") &gt;
     @Html.ActionLink("Felder", "List") &gt;
     &Uuml;bersicht
}

<h2>Materialeigenschaften</h2>

@*@using (Ajax.BeginForm(new AjaxOptions { UpdateTargetId = "message-box-container" }))*@
@using (Ajax.BeginForm(new AjaxOptions { }))
{
    @Html.ValidationSummary(false)
    
    <p>
        <span class="unobtrusive-remove"><input type="submit" value="Speichern" /> | </span>
        @Html.ActionLink(new Appearance { Caption = "Neue Eigenschaft", Button = Button.Primary }, "Create")
    </p>
    <table class="table table-bordered table-striped dnd">
       <thead>
        <tr class="nodrop">
            <th style="width:80px;">
                Position
            </th>
            <th>
                Name
            </th>
            <th>
                Datentyp
            </th>
            <th>
                Systemfeld
            </th>
            <th>
                Hinzufügbar
            </th>
            <th>
                Spalte
            </th>
            <th>
                Standard
            </th>
            <th style="width:160px;"></th>
        </tr>

        </thead>
        <tbody>
    @for (var idx = 0; idx < Model.Items.Count; idx++)
    {
        <tr id="@Html.Raw(Model.Items[idx].Id.ToString())">
            <td class="dnd-idx">
                @Html.EditorFor(m => m.Items[idx].Position)
            </td>
            <td>
                @Html.DisplayFor(m => m.Items[idx].Caption)
            </td>
            <td>
                @Html.DisplayFor(m => m.Items[idx].DataTypeAsText)
            </td>
            <td>
                @Html.DisplayFor(m => m.Items[idx].IsSystem)
            </td>
            <td>
                @Html.DisplayFor(m => m.Items[idx].IsAttachable)
            </td>
            <td>
                @Html.EditorFor(m => m.Items[idx].IsColumn)
            </td>
            <td>
            @if (Model.Items[idx].IsAttachable)
            {
                @Html.EditorFor(m => m.Items[idx].IsDefault)
            }
            else
            {
                @Html.DisplayFor(m => m.Items[idx].IsDefault)
            }
            </td>
            <td>
                @Html.HiddenFor(m => m.Items[idx].Id)

                @Html.ActionLink(new Appearance { Caption = "Bearbeiten", Button = Button.Normal }, "Edit", new { id = Model.Items[idx].Id })
                @if (!Model.Items[idx].IsSystem)
                {
                    @Html.ActionLink(new Appearance { Caption = "Löschen", Button = Button.Danger }, "Delete", new { id = Model.Items[idx].Id, version = Model.Items[idx].Version })
                }
            </td>
        </tr>
    }
   </tbody>
    </table>
    <p>
        <span class="unobtrusive-remove"><input type="submit" value="Speichern" /> | </span>
        @Html.ActionLink(new Appearance { Caption = "Neue Eigenschaft", Button = Button.Primary }, "Create")
    </p>
}
